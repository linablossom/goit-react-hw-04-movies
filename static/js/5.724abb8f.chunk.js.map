{"version":3,"sources":["components/MoviesList/MoviesListStyled.js","components/MoviesList/MoviesList.js","components/SearchForm.js","views/MoviesViews.js"],"names":["MoviesListStyled","styled","ul","MoviesList","movies","prevPath","className","map","title","id","activeClassName","to","pathname","state","exact","SearchForm","query","onInputChange","value","setState","onSubmit","e","preventDefault","props","onSearch","type","this","onChange","target","Component","getSearchQuery","search","replace","MoviesViews","searchedMovies","a","history","push","clearMovies","loadMovies","axios","get","response","data","results","console","log","prevProps","location"],"mappings":"mKAEaA,E,KAAmBC,EAAOC,GAAV,2M,OCuBdC,IArBI,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,OAAQC,EAAe,EAAfA,SAC5B,OACE,cAACL,EAAD,CAAkBM,UAAU,WAA5B,SACGF,EAAOG,KAAI,YAAoB,IAAjBC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,GACpB,OACE,oBAAIH,UAAU,eAAd,SACE,cAAC,IAAD,CACEA,UAAU,eACVI,gBAAgB,qBAChBC,GAAI,CAAEC,SAAS,WAAD,OAAaH,GAAMI,MAAO,CAAER,aAC1CS,OAAK,EAJP,SAMGN,KAP6BC,U,mICqB7BM,E,4MA3BbF,MAAQ,CAAEG,MAAO,I,EAEjBC,cAAgB,SAACC,GACf,EAAKC,SAAS,CAAEH,MAAOE,K,4CAGzB,WAAU,IAAD,OACP,OACE,uBACEE,SAAU,SAACC,GACTA,EAAEC,iBACF,EAAKC,MAAMC,SAAS,EAAKX,MAAMG,QAHnC,UAME,gCACE,uBACES,KAAK,OACLP,MAAOQ,KAAKb,MAAMG,MAClBW,SAAU,SAACN,GAAD,OAAO,EAAKF,SAAS,CAAEH,MAAOK,EAAEO,OAAOV,aAGrD,wBAAQO,KAAK,SAAb,2B,GAtBiBI,a,QCGnBC,EAAiB,SAACC,GAAD,OACrBA,EAAOC,QAAQ,8BAA+B,OAE1CC,E,4MACJpB,MAAQ,CACNqB,eAAgB,I,EAiBlBV,S,uCAAW,WAAOR,GAAP,SAAAmB,EAAA,sDACT,EAAKZ,MAAMa,QAAQC,KAAK,CAAEN,OAAO,WAAD,OAAaf,KADpC,2C,wDAIXsB,YAAc,WACZ,EAAKnB,SAAS,CAAEe,eAAgB,M,EAGlCK,W,uCAAa,WAAOvB,GAAP,eAAAmB,EAAA,+EAEcK,IAAMC,IAAN,6IACiHzB,IAH/H,OAEH0B,EAFG,OAKT,EAAKvB,SAAS,CAAEe,eAAgBQ,EAASC,KAAKC,UALrC,gDAOTC,QAAQC,IAAR,MAPS,yD,8GAtBb,SAAmBC,GACjB,IAAM/B,EAAQc,EAAeJ,KAAKH,MAAMyB,SAASjB,QAE7Cf,IADcc,EAAeiB,EAAUC,SAASjB,UAE9Cf,EAAOU,KAAKa,WAAWvB,GACtBU,KAAKY,iB,+BAId,WACE,IAAMtB,EAAQc,EAAeJ,KAAKH,MAAMyB,SAASjB,QAC7Cf,GAAOU,KAAKa,WAAWvB,K,oBAsB7B,WACE,IAAMA,EAAQc,EAAeJ,KAAKH,MAAMyB,SAASjB,QACjD,OACE,qCACE,cAAC,EAAD,CAAYP,SAAUE,KAAKF,WAC3B,cAACrB,EAAA,EAAD,CACEC,OAAQsB,KAAKb,MAAMqB,eACnB7B,SAAQ,yBAAoBW,Y,GA7CZa,aAoDXI","file":"static/js/5.724abb8f.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const MoviesListStyled = styled.ul`\n  margin: 30px 40px;\n  padding: 0;\n\n  .homeListItem + .homeListItem {\n    margin-top: 8px;\n  }\n\n  .homeListItem:hover,\n  .activeHomeListLink {\n    color: teal;\n  }\n`;\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { MoviesListStyled } from \"./MoviesListStyled\";\n\nconst MoviesList = ({ movies, prevPath }) => {\n  return (\n    <MoviesListStyled className=\"homeList\">\n      {movies.map(({ title, id }) => {\n        return (\n          <li className=\"homeListItem\" key={id}>\n            <NavLink\n              className=\"homeListLink\"\n              activeClassName=\"activeHomeListLink\"\n              to={{ pathname: `/movies/${id}`, state: { prevPath } }}\n              exact\n            >\n              {title}\n            </NavLink>\n          </li>\n        );\n      })}\n    </MoviesListStyled>\n  );\n};\n\nexport default MoviesList;\n","import React, { Component } from \"react\";\n\nclass SearchForm extends Component {\n  state = { query: \"\" };\n\n  onInputChange = (value) => {\n    this.setState({ query: value });\n  };\n\n  render() {\n    return (\n      <form\n        onSubmit={(e) => {\n          e.preventDefault();\n          this.props.onSearch(this.state.query);\n        }}\n      >\n        <label>\n          <input\n            type=\"text\"\n            value={this.state.query}\n            onChange={(e) => this.setState({ query: e.target.value })}\n          ></input>\n        </label>\n        <button type=\"submit\">Search</button>\n      </form>\n    );\n  }\n}\n\nexport default SearchForm;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport SearchForm from \"../components/SearchForm\";\nimport MoviesList from \"../components/MoviesList/MoviesList\";\n\nconst getSearchQuery = (search) =>\n  search.replace(/.*[?&]search=(.*?)(?:&|$).*/, \"$1\");\n\nclass MoviesViews extends Component {\n  state = {\n    searchedMovies: [],\n  };\n\n  componentDidUpdate(prevProps) {\n    const query = getSearchQuery(this.props.location.search);\n    const prevQuery = getSearchQuery(prevProps.location.search);\n    if (query !== prevQuery) {\n      if (query) this.loadMovies(query);\n      else this.clearMovies();\n    }\n  }\n\n  componentDidMount() {\n    const query = getSearchQuery(this.props.location.search);\n    if (query) this.loadMovies(query);\n  }\n\n  onSearch = async (query) => {\n    this.props.history.push({ search: `?search=${query}` });\n  };\n\n  clearMovies = () => {\n    this.setState({ searchedMovies: [] });\n  };\n\n  loadMovies = async (query) => {\n    try {\n      const response = await axios.get(\n        `https://api.themoviedb.org/3/search/movie?api_key=24f3be077b2e648be81bca41e098d522&language=en-US&page=1&include_adult=false&query=${query}`\n      );\n      this.setState({ searchedMovies: response.data.results });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  render() {\n    const query = getSearchQuery(this.props.location.search);\n    return (\n      <>\n        <SearchForm onSearch={this.onSearch} />\n        <MoviesList\n          movies={this.state.searchedMovies}\n          prevPath={`/movies?search=${query}`}\n        />\n      </>\n    );\n  }\n}\n\nexport default MoviesViews;\n"],"sourceRoot":""}