{"version":3,"sources":["routes/movieRoutes.js","components/Cast.js","components/Reviews.js","components/MovieDetailsPage.js","views/MovieView.js"],"names":["movieRoutes","name","path","exact","component","state","cast","id","loadCast","a","movieId","props","match","params","axios","get","response","setState","data","console","log","this","map","profile_path","original_name","character","src","alt","Component","reviews","authorId","getReview","results","author","content","MovieDetailsPage","loaded","loading","details","poster_path","title","release_date","vote_average","overview","genres","date","Date","getFullYear","userScore","Math","floor","movieGenres","join","type","onClick","goBack","MovieTabs","styled","Navigation","MovieView","history","routes","basePath","url","ContentSwitcher","React"],"mappings":"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","file":"static/js/6.1963c6dd.chunk.js","sourcesContent":["import Cast from \"../components/Cast\";\nimport Reviews from \"../components/Reviews\";\n\nexport const movieRoutes = [\n  {\n    name: \"Cast\",\n    path: \"/cast\",\n    exact: true,\n    component: Cast,\n  },\n  {\n    name: \"Reviews\",\n    path: \"/reviews\",\n    exact: true,\n    component: Reviews,\n  },\n];\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nconst BASE_IMG_URL = \"https://www.themoviedb.org/t/p/w138_and_h175_face/\";\n\nclass Cast extends Component {\n  state = {\n    cast: [],\n    id: 451048,\n  };\n\n  loadCast = async () => {\n    try {\n      const { movieId } = this.props.match.params;\n      const response = await axios.get(\n        `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=24f3be077b2e648be81bca41e098d522`\n      );\n      this.setState({ cast: response.data.cast });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  componentDidMount() {\n    this.loadCast();\n  }\n\n  render() {\n    return (\n      <ul>\n        {this.state.cast.map(\n          ({ id, profile_path, original_name, character, name }) => (\n            <li key={`cast-${id}`}>\n              {profile_path ? (\n                <img src={BASE_IMG_URL + profile_path} alt={name} />\n              ) : null}\n              {original_name ? <p>{original_name}</p> : null}\n              {character ? <p>Character: {character}</p> : null}\n            </li>\n          )\n        )}\n      </ul>\n    );\n  }\n}\n\nexport default Cast;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nclass Reviews extends Component {\n  state = {\n    reviews: [],\n    id: 451048,\n    authorId: \"\",\n  };\n\n  getReview = async () => {\n    try {\n      const response = await axios.get(\n        `https://api.themoviedb.org/3/movie/${this.state.id}/reviews?api_key=24f3be077b2e648be81bca41e098d522`\n      );\n      this.setState({ reviews: response.data.results });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  componentDidMount() {\n    this.getReview();\n  }\n\n  render() {\n    return (\n      <ul>\n        {this.state.reviews.map(({ id, author, content }) => (\n          <li key={`review-${id}`}>\n            <h4>Author: {author}</h4>\n            <p>{content}</p>\n          </li>\n        ))}\n      </ul>\n    );\n  }\n}\n\nexport default Reviews;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nconst BASE_IMG_URL = \"https://www.themoviedb.org/t/p/w300_and_h450_bestv2/\";\n\nclass MovieDetailsPage extends Component {\n  state = {\n    loaded: false,\n    loading: false,\n    details: [],\n    id: 451048,\n  };\n\n  async componentDidMount() {\n    try {\n      this.setState({ loading: true });\n      const response = await axios.get(\n        `https://api.themoviedb.org/3/movie/${this.props.movieId}?api_key=24f3be077b2e648be81bca41e098d522`\n      );\n      this.setState({ details: response.data, loading: false, loaded: true });\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  render() {\n    const {\n      poster_path,\n      title,\n      release_date,\n      vote_average,\n      overview,\n      genres,\n    } = this.state.details;\n    if (!this.state.loaded || this.state.loading) return null;\n\n    const date = new Date(release_date).getFullYear();\n    const userScore = Math.floor(+vote_average * 10);\n    const movieGenres = genres.map(({ name }) => name).join(\", \");\n\n    return (\n      <>\n        <button type=\"button\" onClick={this.props.goBack}>\n          &larr; Go back\n        </button>\n\n        <article>\n          {poster_path ? (\n            <img src={BASE_IMG_URL + poster_path} alt={title} />\n          ) : null}\n          <h2>\n            {title ? title : null} ({date ? date : null})\n          </h2>\n          {userScore ? <p>User score: {userScore}%</p> : null}\n          <h3>Overview</h3>\n          {overview ? <p>{overview}</p> : null}\n          <h4>Genres</h4>\n          {movieGenres ? <p>{movieGenres}</p> : null}\n        </article>\n        <p>Additional information</p>\n      </>\n    );\n  }\n}\n\nexport default MovieDetailsPage;\n","import React from \"react\";\nimport ContentSwitcher from \"../components/ContentSwitcher\";\nimport { movieRoutes } from \"../routes/movieRoutes\";\nimport Navigation from \"../components/Navigation\";\nimport MovieDetailsPage from \"../components/MovieDetailsPage\";\nimport styled from \"styled-components\";\n\nconst MovieTabs = styled(Navigation)`\n  ul {\n    display: flex;\n    flex-direction: column;\n    list-style: square;\n  }\n  li {\n    color: red;\n    margin: 10px 0 0 20px;\n  }\n`;\n\nclass MovieView extends React.Component {\n  render() {\n    const { movieId } = this.props.match.params;\n    return (\n      <>\n        <MovieDetailsPage\n          movieId={movieId}\n          goBack={this.props.history.goBack}\n        />\n        <MovieTabs routes={movieRoutes} basePath={this.props.match.url} />\n        <ContentSwitcher\n          routes={movieRoutes}\n          basePath={this.props.match.path}\n        />\n      </>\n    );\n  }\n}\n\nexport default MovieView;\n"],"sourceRoot":""}